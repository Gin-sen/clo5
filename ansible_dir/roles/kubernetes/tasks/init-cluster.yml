---

- name: Check cluster status
  ansible.builtin.shell: kubectl get nodes
  ignore_errors: true
  register: cluster_exist

- set_fact:
    kubernetes_init: "{% if kubernetes_init_host is defined and  kubernetes_init_host == inventory_hostname %}yes{% else %}no{% endif %}"

# - set_fact:
#     kubernetes_ip_address: "{{ ansible.utils.ipaddr() }}"

# - set_fact:
#     kubernetes_ip_address: "{{ item }}"
#   when: "item | ansible.utils.ipaddr( kubernetes_subnet )"
#   with_items: "{{ ansible_all_ipv4_addresses }}"

- set_fact:
    kubernetes_image_repository: "{% if kubernetes_version is version('1.25.0', '<') %}k8s.gcr.io{% else %}registry.k8s.io{% endif %}"

- name: Debug 
  ansible.builtin.debug:
    msg: 
      - inventory_hostname = {{ inventory_hostname }}
      - cluster_exist = {{ cluster_exist }}
      # - kubernetes_ip_address = {{ kubernetes_ip_address }}
      - kubernetes_image_repository = {{ kubernetes_image_repository }}
# - block:

#     - set_fact:
#         kubernetes_iface: "{{ hostvars[inventory_hostname]['ansible_' + item ]['device'] }}"
#       when: 
#         - hostvars[inventory_hostname]['ansible_' + item ].ipv4 is defined 
#         - hostvars[inventory_hostname]['ansible_' + item ]['ipv4']['address'] | ipaddr( kubernetes_subnet )
#       with_items: "{{ ansible_interfaces }}"
    
#     - set_fact:
#         apiserver_sans: "{{ (sans_base + [kubernetes_vip_ip] ) | unique }}"

#     - name: render kubeadm-init.yml
#       ansible.builtin.template:
#         src: kubeadm-init.yml.j2
#         dest: /root/kubeadm-init.yml


#     - set_fact:
#         kubeadm_extra_args: "{% if groups['kubemaster'] | length > 1 %}--upload-certs{% else %}{% endif %}"

#     - name: Init kubernetes cluster
#       ansible.builtin.shell: kubeadm init --config /root/kubeadm-init.yml {{ kubeadm_extra_args }} > /root/kubeinit.log
    
#     - name: Create ~/.kube directory
#       ansible.builtin.file: 
#         name: ~/.kube
#         state: directory
    
#     - name: Populate .kube/config file
#       ansible.builtin.copy: 
#         src: /etc/kubernetes/admin.conf
#         dest: ~/.kube/config
#         remote_src: yes

#     - include_tasks: 
#         file: cni-install.yml

#   when: 
#     - inventory_hostname in groups['kubemaster']
#     - kubernetes_init
#     - cluster_exist.rc == 1
#   ignore_errors: "{{ ansible_check_mode }}"