version: '3.8'

services:

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      # - booking.db
      - hotel.db

  hotel.db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=Bobby
      - POSTGRES_PASSWORD=BR
      - POSTGRES_DB=hotel-db
    volumes:
      - db-data-hotel:/var/lib/postgresql/data
    ports:
      - "5444:5432"

  hotel.api:
    image: hotel-api
    restart: on-failure
    build:
      dockerfile: Dockerfile
      context: .
      target: final
      args:
        SOURCEFOLDER: hotel
    environment:
      - ENV_SOURCEFOLDER=hotel
      - DB_HOST=hotel.db
      - DB_PORT=5432
      - DB_USER=Bobby
      - DB_PASS=BR
      - DB_NAME=hotel-db
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_ORGANIZATION=myorg
      - INFLUX_TOKEN=mytoken
      - INFLUX_BUCKET=hotel-api-dev
    volumes:
      - ./hotel:/code/hotel
    ports:
      - "8002:80"
    depends_on:
      - hotel.db
      - influxdb

  # hotel.api-test:
  #   image: hotel-api-test
  #   restart: "no"
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #     target: test
  #     args:
  #       SOURCEFOLDER: hotel
  #   environment:
  #     - ENV_SOURCEFOLDER=hotel
  #     - DB_HOST=hotel.db
  #     - DB_PORT=5432
  #     - DB_USER=Bobby
  #     - DB_PASS=BR
  #     - DB_NAME=hotel-db
  #   volumes:
  #     - ./hotel:/code/hotel
  #   depends_on:
  #     - hotel.db

  # booking.db:
  #   image: postgres:13-alpine
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=Bobby
  #     - POSTGRES_PASSWORD=BR
  #     - POSTGRES_DB=booking-db
  #   volumes:
  #     - db-data-hotel:/var/lib/postgresql/data
  #   ports:
  #     - "5445:5432"

  # booking.api:
  #   image: booking-api
  #   restart: on-failure
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #     target: final
  #     args:
  #       SOURCEFOLDER: booking
  #   environment:
  #     - ENV_SOURCEFOLDER=booking
  #     - DB_HOST=booking.db
  #     - DB_PORT=5432
  #     - DB_USER=Bobby
  #     - DB_PASS=BR
  #     - DB_NAME=booking-db
  #   volumes:
  #     - ./hotel:/code/booking
  #   ports:
  #     - "8003:80"
  #   depends_on:
  #     - booking.db

  # booking.api-test:
  #   image: booking-api-test
  #   restart: "no"
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #     target: test
  #     args:
  #       SOURCEFOLDER: booking
  #   environment:
  #     - ENV_SOURCEFOLDER=booking
  #     - DB_HOST=booking.db
  #     - DB_PORT=5432
  #     - DB_USER=Bobby
  #     - DB_PASS=BR
  #     - DB_NAME=booking-db
  #   volumes:
  #     - ./hotel:/code/booking
  #   depends_on:
  #     - booking.db

  influxdb:
    image: influxdb:2.6-alpine
    env_file:
      - influxv2.env
    volumes:
      # Mount for influxdb data directory and configuration
      - influxdbv2:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"
      
  telegraf:
    image: telegraf:1.25-alpine
    depends_on:
      - influxdb
    volumes:
      # Mount for telegraf config
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    env_file:
      - influxv2.env

volumes:
  influxdbv2:
  db-data-hotel:
  # db-data-booking:
